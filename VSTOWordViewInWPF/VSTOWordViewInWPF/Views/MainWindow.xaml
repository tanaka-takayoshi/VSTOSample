<Window x:Class="VSTOWordViewInWPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:VSTOWordViewInWPF.Views"
        xmlns:vm="clr-namespace:VSTOWordViewInWPF.ViewModels"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <l:VisibilityAndBooleanConverter x:Key="VisibilityAndBooleanConverter"/>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    
    <i:Interaction.Triggers>
    
    	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Height="70">
            <StackPanel Orientation="Horizontal" Visibility="{Binding IsBusy, ConverterParameter=false, Converter={StaticResource VisibilityAndBooleanConverter}, Mode=OneWay}">
                <Button Content="Open" Width="100" Margin="10"
                    Command="{Binding OpenFileCommand}">
                    <Button.Visibility>
                        <Binding Path="IsBusy">
                            <Binding.Converter>
                                <l:VisibilityAndBooleanConverter
                                ConvertWhenTrue="Collapsed"
                                ConvertWhenFalse="Visible"/>
                            </Binding.Converter>
                        </Binding>
                    </Button.Visibility>
                </Button>
            </StackPanel>
            <ProgressBar IsIndeterminate="True" >
                <ProgressBar.Visibility>
                    <Binding Path="IsBusy">
                        <Binding.Converter>
                            <l:VisibilityAndBooleanConverter
                                ConvertWhenTrue="Visible"
                                ConvertWhenFalse="Collapsed"/>
                        </Binding.Converter>
                    </Binding>
                </ProgressBar.Visibility>
            </ProgressBar>
        </Grid>
        
        <DocumentViewer Grid.Row="1" Name="documentviewWord" VerticalAlignment="Top" HorizontalAlignment="Left"
                        Document="{Binding DocumentPaginatorSource}"/>
    </Grid>
</Window>
